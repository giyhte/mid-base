
import telebot
import mysql.connector
from mysql.connector import Error

# üîê –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "8363145008:AAEM6OSKNRjX3SDU6yINZwbMOEcsaOQVdiI"
OWNER_IDS = [7537570296, 5821123636]

DB_HOST = "sql8.freesqldatabase.com"
DB_USER = "sql8792761"
DB_PASSWORD = "1upRsp7dLm"
DB_NAME = "sql8792761"

bot = telebot.TeleBot(BOT_TOKEN, parse_mode="HTML")

# üìå –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —á–∞—Ç–æ–≤, –≥–¥–µ –±–æ—Ç –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω
chats = set()

# üì¶ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î
def get_connection():
    return mysql.connector.connect(
        host=DB_HOST,
        user=DB_USER,
        password=DB_PASSWORD,
        database=DB_NAME,
        charset="utf8mb4"
    )

# ‚öôÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã
def init_db():
    try:
        conn = get_connection()
        cursor = conn.cursor()
        cursor.execute("""
            CREATE TABLE IF NOT EXISTS users (
                user_id VARCHAR(100) PRIMARY KEY,
                role VARCHAR(50) DEFAULT '–Ω–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π',
                scam_percent VARCHAR(10) DEFAULT '50%'
            )
        """)
        conn.commit()
        cursor.close()
        conn.close()
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
    except Error as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")

init_db()

# üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_role(user_id, username=None):
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ —Ç–æ–ª—å–∫–æ –¥–ª—è —á–∏—Å–ª–æ–≤—ã—Ö ID
        if isinstance(user_id, int) and user_id in OWNER_IDS:
            return "–≤–ª–∞–¥–µ–ª–µ—Ü"

        conn = get_connection()
        cursor = conn.cursor()
        
        # –ò—â–µ–º –ø–æ ID –∏–ª–∏ –ø–æ username
        if isinstance(user_id, str) and user_id.startswith("@"):
            # –ü–æ–∏—Å–∫ –ø–æ username
            cursor.execute("SELECT role FROM users WHERE user_id = %s", (user_id,))
        else:
            # –ü–æ–∏—Å–∫ –ø–æ —á–∏—Å–ª–æ–≤–æ–º—É ID
            cursor.execute("SELECT role FROM users WHERE user_id = %s", (str(user_id),))
            
        result = cursor.fetchone()
        cursor.close()
        conn.close()

        if result and result[0]:
            return result[0]
        else:
            return "–Ω–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π"
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–æ–ª–∏: {e}")
        return "–Ω–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π"

# üìà –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–∫–∞–º–∞
def get_risk(role):
    return {
        "–≤–ª–∞–¥–µ–ª–µ—Ü": "0%",
        "–≥–∞—Ä–∞–Ω—Ç": "0%",
        "–≤–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞": "10%",
        "–æ—Ç–∫–∞–∑ –æ—Ç –≥–∞—Ä–∞–Ω—Ç–∞": "80%",
        "—Å–∫–∞–º–µ—Ä": "100%",
        "–Ω–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π": "50% (–ª—É—á—à–µ —Ö–æ–¥–∏—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–º)"
    }.get(role, "50%")

# üîÅ –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def handle_start(msg):
    chats.add(msg.chat.id)
    bot.reply_to(msg, "ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

# üîç –ö–æ–º–∞–Ω–¥–∞ /help –∏–ª–∏ "—Ö–µ–ª–ø"
@bot.message_handler(commands=['help'])
@bot.message_handler(func=lambda msg: msg.text and msg.text.lower() == "—Ö–µ–ª–ø")
def handle_help(msg):
    chats.add(msg.chat.id)
    bot.reply_to(msg, "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start ‚Äî –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω\n—á–µ–∫ ‚Äî –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n—á–µ–∫ @username ‚Äî –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É\n–∑–∞–Ω–µ—Å—Ç–∏ &lt;—Ä–æ–ª—å&gt; ‚Äî –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É\n–∑–∞–Ω–µ—Å—Ç–∏ @username &lt;—Ä–æ–ª—å&gt; ‚Äî –ó–∞–Ω–µ—Å—Ç–∏ –ø–æ —é–∑–µ—Ä–Ω–µ–π–º—É\n–≤—ã–Ω–µ—Å—Ç–∏ ‚Äî –£–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–∑—ã\n–∫–æ–º–∞–Ω–¥—ã ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")

# üìã –ö–æ–º–∞–Ω–¥–∞ "–∫–æ–º–∞–Ω–¥—ã"
@bot.message_handler(func=lambda msg: msg.text and msg.text.lower() == "–∫–æ–º–∞–Ω–¥—ã")
def handle_commands(msg):
    chats.add(msg.chat.id)
    text = (
        "üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"


# ‚ûï –ó–∞–Ω–µ—Å—Ç–∏ <—Ä–æ–ª—å>
@bot.message_handler(func=lambda msg: msg.text and msg.text.lower().startswith("–∑–∞–Ω–µ—Å—Ç–∏"))
def handle_add_role(msg):
    chats.add(msg.chat.id)
    
    caller_role = get_role(msg.from_user.id)
    if msg.chat.type != "private":
        if msg.from_user.id not in OWNER_IDS and caller_role not in ["–≥–∞—Ä–∞–Ω—Ç", "–≤–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞"]:
            return

    parts = msg.text.strip().split()
    if len(parts) < 2:
        bot.reply_to(msg, "–ü—Ä–∏–º–µ—Ä—ã:\n–∑–∞–Ω–µ—Å—Ç–∏ —Å–∫–∞–º–µ—Ä (–æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ)\n–∑–∞–Ω–µ—Å—Ç–∏ @username —Å–∫–∞–º–µ—Ä")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ username –≤ –∫–æ–º–∞–Ω–¥–µ
    if parts[1].startswith("@"):
        # –ó–∞–Ω–µ—Å–µ–Ω–∏–µ –ø–æ username
        if len(parts) < 3:
            bot.reply_to(msg, "–ü—Ä–∏–º–µ—Ä: –∑–∞–Ω–µ—Å—Ç–∏ @MidGARANT —Å–∫–∞–º–µ—Ä")
            return
        
        username = parts[1][1:]  # —É–±–∏—Ä–∞–µ–º @
        role = parts[2].lower()
        
        # –ó–∞–Ω–æ—Å–∏–º —Å—Ä–∞–∑—É –ø–æ username –±–µ–∑ –ø–æ–∏—Å–∫–∞
        target_name = f"@{username}"
        target_id = f"@{username}"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º username –∫–∞–∫ ID
        
    else:
        # –ó–∞–Ω–µ—Å–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not msg.reply_to_message:
            bot.reply_to(msg, "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –∑–∞–Ω–µ—Å—Ç–∏ @username —Ä–æ–ª—å")
            return
        
        role = parts[1].lower()
        target = msg.reply_to_message.from_user
        target_name = target.first_name
        target_id = target.id

    allowed_roles = ["—Å–∫–∞–º–µ—Ä", "–≥–∞—Ä–∞–Ω—Ç", "–≤–ª–∞–¥–µ–ª–µ—Ü_—á–∞—Ç–∞", "–æ—Ç–∫–∞–∑", "–æ—Ç–∫–∞–∑_–æ—Ç_–≥–∞—Ä–∞–Ω—Ç–∞"]
    if role not in allowed_roles:
        bot.reply_to(msg, "–î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ä–æ–ª–∏: —Å–∫–∞–º–µ—Ä, –≥–∞—Ä–∞–Ω—Ç, –≤–ª–∞–¥–µ–ª–µ—Ü_—á–∞—Ç–∞, –æ—Ç–∫–∞–∑")
        return

    if caller_role in ["–≥–∞—Ä–∞–Ω—Ç", "–≤–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞"] and role == "–≥–∞—Ä–∞–Ω—Ç":
        bot.reply_to(msg, "‚ùå –ì–∞—Ä–∞–Ω—Ç –∏ –≤–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞ –Ω–µ –º–æ–≥—É—Ç –∑–∞–Ω–æ—Å–∏—Ç—å –≥–∞—Ä–∞–Ω—Ç–æ–≤.")
        return

    if isinstance(target_id, int) and target_id in OWNER_IDS:
        bot.reply_to(msg, "–ù–µ–ª—å–∑—è –º–µ–Ω—è—Ç—å —Ä–æ–ª—å –≤–ª–∞–¥–µ–ª—å—Ü—É.")
        return

    # –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if role.startswith("–æ—Ç–∫–∞–∑"):
        role_text = "–æ—Ç–∫–∞–∑ –æ—Ç –≥–∞—Ä–∞–Ω—Ç–∞"
        scam_percent = "80%"
    elif role == "–≤–ª–∞–¥–µ–ª–µ—Ü_—á–∞—Ç–∞":
        role_text = "–≤–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞"
        scam_percent = "10%"
    elif role == "—Å–∫–∞–º–µ—Ä":
        role_text = "—Å–∫–∞–º–µ—Ä"
        scam_percent = "100%"
    elif role == "–≥–∞—Ä–∞–Ω—Ç":
        role_text = "–≥–∞—Ä–∞–Ω—Ç"
        scam_percent = "0%"
    else:
        role_text = role
        scam_percent = "50%"

    try:
        conn = get_connection()
        cursor = conn.cursor()
        cursor.execute("REPLACE INTO users (user_id, role, scam_percent) VALUES (%s, %s, %s)", (str(target_id), role_text, scam_percent))
        conn.commit()
        cursor.close()
        conn.close()
    except Error as e:
        bot.reply_to(msg, f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return

    # üí• –†–∞—Å—Å—ã–ª–∫–∞ –µ—Å–ª–∏ —Å–∫–∞–º–µ—Ä
    if role_text == "—Å–∫–∞–º–µ—Ä":
        alert_text = f"‚ö†Ô∏è <a href='tg://user?id={target_id}'>{target_name}</a> –∑–∞–Ω–µ—Å—ë–Ω –≤ –±–∞–∑—É –∫–∞–∫ <b>–°–ö–ê–ú–ï–†</b>!"
        for chat_id in chats:
            try:
                bot.send_message(chat_id, alert_text)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ –≤ {chat_id}: {e}")

    bot.reply_to(msg, f"{target_name} ‚ÄºÔ∏è –ó–ê–ù–ï–°–ï–ù –í –ë–ê–ó–£ –ö–ê–ö {role_text.upper()}")

# ‚ûñ –í—ã–Ω–µ—Å—Ç–∏ (—É–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–∑—ã)
@bot.message_handler(func=lambda msg: msg.text and msg.text.lower().startswith("–≤—ã–Ω–µ—Å—Ç–∏"))
def handle_remove_user(msg):
    chats.add(msg.chat.id)
    
    caller_role = get_role(msg.from_user.id)
    if msg.chat.type != "private":
        if msg.from_user.id not in OWNER_IDS and caller_role not in ["–≥–∞—Ä–∞–Ω—Ç", "–≤–ª–∞–¥–µ–ª–µ—Ü —á–∞—Ç–∞"]:
            return

    parts = msg.text.strip().split()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ username –≤ –∫–æ–º–∞–Ω–¥–µ
    if len(parts) >= 2 and parts[1].startswith("@"):
        # –í—ã–Ω–µ—Å—Ç–∏ –ø–æ username
        username = parts[1][1:]  # —É–±–∏—Ä–∞–µ–º @
        target_name = f"@{username}"
        target_id = f"@{username}"
        
    else:
        # –í—ã–Ω–µ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if not msg.reply_to_message:
            bot.reply_to(msg, "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –≤—ã–Ω–µ—Å—Ç–∏ @username")
            return
        
        target = msg.reply_to_message.from_user
        target_name = target.first_name
        target_id = target.id

    if isinstance(target_id, int) and target_id in OWNER_IDS:
        bot.reply_to(msg, "–ù–µ–ª—å–∑—è –≤—ã–Ω–æ—Å–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞.")
        return

    try:
        conn = get_connection()
        cursor = conn.cursor()
        cursor.execute("DELETE FROM users WHERE user_id = %s", (str(target_id),))
        
        if cursor.rowcount > 0:
            conn.commit()
            bot.reply_to(msg, f"‚úÖ {target_name} —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
        else:
            bot.reply_to(msg, f"‚ùå {target_name} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
        
        cursor.close()
        conn.close()
    except Error as e:
        bot.reply_to(msg, f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

# üë• –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫
@bot.message_handler(content_types=['new_chat_members'])
def on_new_members(message):
    chats.add(message.chat.id)
    for user in message.new_chat_members:
        user_id = user.id
        role = get_role(user_id)
        risk = get_risk(role)
        if role == "–Ω–µ–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π":
            bot.send_message(
                message.chat.id,
                f"üö® –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <a href='tg://user?id={user.id}'>{user.first_name}</a> –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.\n"
                f"–†–æ–ª—å: <code>{role}</code>\n"
                f"üìä –®–∞–Ω—Å —Å–∫–∞–º–∞: <code>{risk}</code>"
            )

# –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —á–∞—Ç–µ
@bot.message_handler(func=lambda msg: msg.chat.type in ["group", "supergroup"])
def auto_check_group(msg):
    chats.add(msg.chat.id)
    user = msg.from_user
    role = get_role(user.id)
    if role == "—Å–∫–∞–º–µ—Ä":
        bot.reply_to(msg,
            f"‚ö†Ô∏è –û—Å—Ç–æ—Ä–æ–∂–Ω–æ! –ò–≥—Ä–æ–∫ <a href='tg://user?id={user.id}'>{user.first_name}</a> –∑–∞–Ω–µ—Å—ë–Ω –≤ –±–∞–∑—É –∫–∞–∫ <b>–°–ö–ê–ú–ï–†</b>."
        )

# üì• –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —á–∞—Ç—ã (–ø–æ—Å–ª–µ–¥–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π)
@bot.message_handler(func=lambda msg: True)
def register_chat(msg):
    chats.add(msg.chat.id)

# üîÅ –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
try:
    bot.infinity_polling()
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
